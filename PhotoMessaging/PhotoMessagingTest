import org.junit.jupiter.api.Test;
import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.io.*;
import java.util.ArrayList;

import static org.junit.jupiter.api.Assertions.*;

class PhotoMessagingTest {
    private User sender = new User("Username");
    private User user = new User("Username");
    private Friends receiver = new Friends(user);
    private BufferedImage testImage;
    private String date = "2024-11-03";
    private ArrayList<PhotoMessaging> photoMessageHistory;

    @Test
    void getMessageHistory() {
    }

    @Test
    void setMessageHistory() {
    }

    @Test
    void getSender() {
        PhotoMessaging photoMessage = new PhotoMessaging(sender, receiver, image, date, false);
        assertEquals(sender, photoMessage.getSender());
    }

    @Test
    void getReceiver() {
        PhotoMessaging photoMessage = new PhotoMessaging(sender, receiver, image, date, false);
        assertEquals(receiver, photoMessage.getReceiver());
    }

    @Test
    void getImageContent() {
        PhotoMessaging photoMessage = new PhotoMessaging(sender, receiver, image, date, false);
        assertEquals(image, photoMessage.getImageContent());
    }

    @Test
    void getDate() {
        PhotoMessaging photoMessage = new PhotoMessaging(sender, receiver, image, date, false);
        assertEquals(date, photoMessage.getDate());
    }

    @Test
    void getIsRead() {
        PhotoMessaging photoMessage = new PhotoMessaging(sender, receiver, image, date, false);
        assertFalse(photoMessage.getIsRead());
    }

    @Test
    void rewritePhotoMessages() {
    }

    @Test
    void testToString() {
    }

    @Test
    void saveToFile() {
    }

    @Test
    void testSendPhotoMessage() {
        receiver.addFriend(sender);
        PhotoMessaging photoMessage = new PhotoMessaging(sender, receiver, testImage, date, false);
        photoMessage.sendPhotoMessage(sender, receiver, testImage, date, false);

        photoMessageHistory = PhotoMessaging.getMessageHistory();
        String answer = "Username:[Photo]:Username"; // Expected format if photo messages are displayed this way
        assertEquals(answer, photoMessageHistory.get(0).toString());
    }

    @Test
    void sendAllFriendsPhotoMessage() {
    }

    @Test
    void sendAllUsersPhotoMessage() {
    }

    @Test
    void testDeletePhotoMessage() {
        receiver.addFriend(sender);
        PhotoMessaging photoMessage = new PhotoMessaging(sender, receiver, testImage, date, false);
        photoMessage.sendPhotoMessage(sender, receiver, testImage, date, false);

        photoMessageHistory = PhotoMessaging.getMessageHistory();
        String answer = "Username:[Photo]:Username";
        assertEquals(answer, photoMessageHistory.get(0).toString());

        photoMessage.deletePhotoMessage(sender, receiver, testImage, date, false);
        photoMessageHistory = PhotoMessaging.getMessageHistory();
        assertTrue(photoMessageHistory.isEmpty());
    }

    @Test
    void deleteFriendsPhotoMessage() {
    }

    @Test
    void deleteAllPhotoMessage() {
    }

    @Test
    void report() {
    }

    @Test
    void deleteConversation() {
    }

    @Test
    void deleteAllFriendsConversation() {
    }

    @Test
    void deleteAllUsersConversation() {
    }
}
